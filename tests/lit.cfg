# -*- Python -*-
import lit.formats
from lit.llvm import llvm_config

config.name = 'libledmtx'

config.test_format = lit.formats.ShTest(not llvm_config.use_lit_shell)

config.suffixes = ['.S', '.c']
config.excludes = []
config.test_source_root = config.ledmtx_test_dir
config.test_exec_root = config.ledmtx_test_dir

# Publish all `LEDMTX_HAVE_xxx` macros in `ledmtx_config.h` that equal 1 as available features
# such that those can be used in a `REQUIRES` directive.
config.available_features = [K for K, V in config.ledmtx_config_h.items()
                             if K.startswith('LEDMTX_HAVE_') and V == '1']

config.substitutions += [
    ('%gpasm', 'gpasm'),
    ('%gplink', 'gplink'),
    ('%gpsim', 'gpsim'),
    ('%sdcc', 'sdcc'),
    ('%ledmtx_test_dir', config.ledmtx_test_dir),
    ('%ledmtx_src_dir', config.ledmtx_src_dir),
    ('%ASFLAGS', '-p 18f452 -I' + config.ledmtx_src_dir + '/../include -I' + config.ledmtx_src_dir),
    ('%GPLINKFLAGS', '-O2 ' + ' '.join(['-I%s' % I for I in config.sdcc_dirs['libdir']])),
    ('%LDFLAGS', '-mpic16 -p18f452 --use-non-free --use-crt=crt0i.o -Wl-m -L' + config.ledmtx_src_dir + '/core -l libc18f.lib -l libledmtx_core.lib'),
    ('%CFLAGS', '-mpic16 -p18f452 --fomit-frame-pointer --pstack-model=small --use-non-free -I' + config.ledmtx_src_dir + '/../include'),
]
